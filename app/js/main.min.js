class ViewGraphics{DDA(t,e,i,l){const s=i-t,a=l-e,r=Math.abs(s)>Math.abs(a)?Math.abs(s):Math.abs(a),n=1*s/r,o=1*a/r;let h=t,c=e;this.fillPixel(t,e);for(let t=0;t<r;t++)h+=n,c+=o,this.fillPixel(h,c)}brezenhem(t,e,i,l){let s=Math.abs(i-t),a=Math.abs(l-e),r=t<i?1:-1,n=e<l?1:-1,o=s-a;for(this.fillPixel(i,l);t!=i||e!=l;){this.fillPixel(t,e);let i=2*o;i>-a&&(o-=a,t+=r),i<s&&(o+=s,e+=n)}}circleBrezenhem(t,e,i){let l=0,s=i,a=1-2*i,r=0;for(;s>=l;)this.fillPixel(t+l,e+s),this.fillPixel(t+l,e-s),this.fillPixel(t-l,e+s),this.fillPixel(t-l,e-s),this.fillPixel(t+s,e+l),this.fillPixel(t+s,e-l),this.fillPixel(t-s,e+l),this.fillPixel(t-s,e-l),r=2*(a+s)-1,a<0&&r<=0?a+=2*++l+1:a>0&&r>0?a-=2*--s+1:a+=2*(++l- --s)}factorial(t){let e=1;for(let i=1;i<=t;i++)e*=i;return e}polBershtein(t,e,i){return this.factorial(e)/(fthis.actorial(t)*this.factorial(e-t))*Math.pow(i,t)*Math.pow(1-i,e-t)}bezie(){let t=0;const e=[];for(let i=0;i<1;i+=.001){let l=0,s=0;for(let t=0;t<Arr.length;t++){const e=this.polBershtein(t,Arr.length-1,i);s+=Arr[t].x*e,l+=Arr[t].y*e}e[t]={x:s,y:l},t++}for(let t=0;t<e.length;t++)this.fillPixel(e[t].x,e[t].y)}fillPixel(t,e){ctx.fillRect(t,e,2,2)}}const canvas=document.querySelector("#canvas"),ctx=canvas.getContext("2d");let viewGraphics=new ViewGraphics;canvas.width=window.innerWidth,canvas.height=window.innerHeight;let isMouseDown=!1,Arr=[],startCoordinates={x:0,y:0};canvas.addEventListener("mousedown",t=>{isMouseDown=!0,Arr=[],startCoordinates={x:t.clientX,y:t.clientY},Arr.push(startCoordinates)}),canvas.addEventListener("mouseup",t=>{isMouseDown=!1,viewGraphics.brezenhem(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);Math.sqrt(Math.pow(t.clientX-startCoordinates.x,2)+Math.pow(t.clientY-startCoordinates.y,2));ctx.beginPath()}),canvas.addEventListener("mousemove",t=>{Arr.push({x:t.clientX,y:t.clientY})});