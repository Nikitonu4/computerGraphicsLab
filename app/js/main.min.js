class ViewGraphics{constructor(t){this.ctx=t,this.coordinatesRectangle={},this.coordinatesPolygon=[],this.LEFT=1,this.RIGHT=2,this.BOTTOM=4,this.TOP=8}clear(){const t=this.ctx.canvas.width,e=this.ctx.canvas.height;this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,t,e),this.ctx.fillStyle="#000"}DDA(t,e,o,n){const i=o-t,s=n-e,l=Math.abs(i)>Math.abs(s)?Math.abs(i):Math.abs(s),r=1*i/l,a=1*s/l;let c=t,h=e;this.fillPixel(t,e);for(let t=0;t<l;t++)c+=r,h+=a,this.fillPixel(c,h)}brezenhem(t,e,o,n){let i=Math.abs(o-t),s=Math.abs(n-e),l=t<o?1:-1,r=e<n?1:-1,a=i-s;for(this.fillPixel(o,n);t!=o||e!=n;){this.fillPixel(t,e);let o=2*a;o>-s&&(a-=s,t+=l),o<i&&(a+=i,e+=r)}}notIntEnds(t,e,o,n){let i=0,s=0,l=Math.round(n-e),r=Math.round(o-t),a=1,c=1;l<0&&(l=-l,a=-1),r<0&&(r=-r,c=-1);let h=1e3,d=h/Math.abs(n-e),y=0,u=h/Math.abs(o-t),g=0;for(;y<h&&g<h;)this.fillPixel(i*a+Math.round(e),s*c+Math.round(t)),y<g?(i++,y+=d):y>g?(s++,g+=u):(this.fillPixel(i*a+Math.round(e),(s+1)*c+Math.round(t)),i++,s++,y+=d,g+=u)}circleBrezenhem(t,e,o){let n=0,i=o,s=1-2*o,l=0;for(;i>=n;)this.fillPixel(t+n,e+i),this.fillPixel(t+n,e-i),this.fillPixel(t-n,e+i),this.fillPixel(t-n,e-i),this.fillPixel(t+i,e+n),this.fillPixel(t+i,e-n),this.fillPixel(t-i,e+n),this.fillPixel(t-i,e-n),l=2*(s+i)-1,s<0&&l<=0?s+=2*++n+1:s>0&&l>0?s-=2*--i+1:s+=2*(++n- --i)}factorial(t){let e=1;for(let o=1;o<=t;o++)e*=o;return e}polBershtein(t,e,o){return this.factorial(e)/(this.factorial(t)*this.factorial(e-t))*Math.pow(o,t)*Math.pow(1-o,e-t)}bezie(t){let e=0;const o=[];for(let n=0;n<1;n+=.001){let i=0,s=0;for(let e=0;e<3;e++){const o=this.polBershtein(e,t.length-1,n);s+=t[e].x*o,i+=t[e].y*o}o[e]={x:s,y:i},e++}for(let t=0;t<o.length;t++)this.fillPixel(o[t].x,o[t].y)}createRectangle(t,e,o,n){this.coordinatesRectangle.x0=t,this.coordinatesRectangle.y0=e,this.coordinatesRectangle.x1=o,this.coordinatesRectangle.y1=n,this.ctx.strokeStyle="#000",this.ctx.strokeRect(t,e,o-t,n-e)}getCode(t){let e=0;return t.x<this.coordinatesRectangle.x0&&(e+=this.LEFT),t.x>this.coordinatesRectangle.x1&&(e+=this.RIGHT),t.y<this.coordinatesRectangle.y0&&(e+=this.BOTTOM),t.y>this.coordinatesRectangle.y1&&(e+=this.TOP),e}koenSaz(t,e,o,n){let i,s=[{x:t,y:e},{x:o,y:n}],l={},r=this.getCode(s[0]),a=this.getCode(s[1]);for(;r|a;){if(r&a)return;0|r?(i=r,l=s[0]):(i=a,l=s[1]),i&this.LEFT?(l.y+=(s[0].y-s[1].y)*(this.coordinatesRectangle.x0-l.x)/(s[0].x-s[1].x),l.x=this.coordinatesRectangle.x0):i&this.RIGHT?(l.y+=(s[0].y-s[1].y)*(this.coordinatesRectangle.x1-l.x)/(s[0].x-s[1].x),l.x=this.coordinatesRectangle.x1):i&this.BOTTOM?(l.x+=(s[0].x-s[1].x)*(this.coordinatesRectangle.y0-l.y)/(s[0].y-s[1].y),l.y=this.coordinatesRectangle.y0):i&this.TOP&&(l.x+=(s[0].x-s[1].x)*(this.coordinatesRectangle.y1-l.y)/(s[0].y-s[1].y),l.y=this.coordinatesRectangle.y1),i===r?(s[0]=l,r=this.getCode(s[0])):(s[1]=l,a=this.getCode(s[1]))}this.DDA(s[0].x,s[0].y,s[1].x,s[1].y)}isInside(t,e){return this.coordinatesRectangle.x0<=t&&this.coordinatesRectangle.x1>=t&&this.coordinatesRectangle.y0<=e&&this.coordinatesRectangle.y1>=e}midPoint(t,e,o,n){if(Math.abs(t-o)<=1&&Math.abs(e-n)<=1)return;if(this.isInside(t,e)&&this.isInside(o,n))return void this.DDA(t,e,o,n);this.getCode({x:t,y:e})&this.getCode({x:o,y:n})||(this.midPoint(t,e,(t+o)/2,(e+n)/2),this.midPoint((t+o)/2,(e+n)/2,o,n))}dotProduct(t,e){let o=0;for(let n=0;n<2;n++)o+=t[n]*e[n];return o}penPolygon(){for(let t=0;t<this.coordinatesPolygon.length-1;t+=1){const e=this.coordinatesPolygon[t].x,o=this.coordinatesPolygon[t].y,n=this.coordinatesPolygon[t+1].x,i=this.coordinatesPolygon[t+1].y;this.DDA(e,o,n,i)}const t=this.coordinatesPolygon.length;this.DDA(this.coordinatesPolygon[t-1].x,this.coordinatesPolygon[t-1].y,this.coordinatesPolygon[0].x,this.coordinatesPolygon[0].y)}cyrusBeck(t,e,o,n){var i=this.coordinatesPolygon.length,s=[o-t,n-e],l=this.coordinatesPolygon;let r,a,c,h;var d,y,u,g,x=[],f=this.coordinatesPolygon.length,P=0,m=1;for(let t=0;t<f;t++)x.push([this.coordinatesPolygon[t%f].y-this.coordinatesPolygon[(t+1)%f].y,[this.coordinatesPolygon[(t+1)%f].x-this.coordinatesPolygon[t%f].x]]);for(let o=0;o<i;o++)if(d=[t-l[o].x,e-l[o].y],y=this.dotProduct(s,x[o]),u=this.dotProduct(d,x[o]),0!==y)if(g=-u/y,y>0){if(g>1)return;P=Math.max(g,P)}else{if(g<0)return;m=Math.min(g,m)}else if(u<0)return;P<=m&&(r=t+(o-t)*P,a=e+(n-e)*P,c=t+(o-t)*m,h=e+(n-e)*m),console.log({px:r,py:a,px1:c,py1:h}),this.DDA(Math.floor(r),Math.floor(a),Math.floor(c),Math.floor(h))}fillPixel(t,e){this.ctx.fillRect(t,e,1,1)}}const controlPanel=document.querySelector(".control__panel"),canvas=document.querySelector("#canvas"),ctx=canvas.getContext("2d"),radioBox=document.querySelector(".control__panel-radiogroup"),createRectangle=document.querySelector(".rectangle"),createPolygon=document.querySelector(".polygon"),clearButton=document.querySelector(".clear"),countDots=document.querySelector(".count-dots"),notIntEnds=document.querySelector(".notIntEnds");let countDotsPolygon=5,nowCountDotsPolygon=0,arrayForPolygon=[],nowAlg=1;const viewGraphics=new ViewGraphics(ctx);canvas.width=window.innerWidth,canvas.height=window.innerHeight;let Arr=[],startCoordinates={x:0,y:0},countBezie=0;function selectAnAlgorithm(){nowAlg=+document.querySelector("input[name=radio-cust]:checked").value}function dragElement(t){let e=0,o=0,n=0,i=0;function s(t){(t=t||window.event).preventDefault(),n=t.clientX,i=t.clientY,document.onmouseup=r,document.onmousemove=l}function l(s){(s=s||window.event).preventDefault(),e=n-s.clientX,o=i-s.clientY,n=s.clientX,i=s.clientY,t.style.top=t.offsetTop-o+"px",t.style.left=t.offsetLeft-e+"px"}function r(){document.onmouseup=null,document.onmousemove=null}document.querySelector(`.${t.className}-header`)?document.querySelector(`.${t.className}-header`).onmousedown=s:t.onmousedown=s}clearButton.addEventListener("click",()=>{viewGraphics.clear()}),createRectangle.addEventListener("click",()=>{nowAlg=5}),createPolygon.addEventListener("click",()=>{countDotsPolygon=countDots.value,nowCountDotsPolygon=0,nowAlg=9}),radioBox.addEventListener("click",()=>{selectAnAlgorithm()}),notIntEnds.addEventListener("click",()=>{viewGraphics.notIntEnds(document.querySelector(".startX").value,document.querySelector(".startY").value,document.querySelector(".endX").value,document.querySelector(".endY").value)}),canvas.addEventListener("mousedown",t=>{4==nowAlg&&(Arr.push({x:t.clientX,y:t.clientY}),countBezie++),9==nowAlg&&(arrayForPolygon.push({x:t.clientX,y:t.clientY}),nowCountDotsPolygon++),startCoordinates={x:t.clientX,y:t.clientY}}),canvas.addEventListener("mouseup",t=>{switch(nowAlg){case 1:console.log(startCoordinates.x),viewGraphics.DDA(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 2:viewGraphics.brezenhem(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 3:const e=Math.sqrt(Math.pow(t.clientX-startCoordinates.x,2)+Math.pow(t.clientY-startCoordinates.y,2));viewGraphics.circleBrezenhem(startCoordinates.x,startCoordinates.y,e);break;case 4:3==countBezie&&(viewGraphics.bezie(Arr),countBezie=0,Arr=[]);break;case 5:viewGraphics.createRectangle(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 6:viewGraphics.koenSaz(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 7:viewGraphics.midPoint(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 8:viewGraphics.cyrusBeck(startCoordinates.x,startCoordinates.y,t.clientX,t.clientY);break;case 9:countDotsPolygon==nowCountDotsPolygon&&(viewGraphics.coordinatesPolygon=arrayForPolygon,viewGraphics.penPolygon(),arrayForPolygon=[],nowCountDotsPolygon=0)}ctx.beginPath()}),dragElement(controlPanel);